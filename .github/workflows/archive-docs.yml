name: Archive documentation

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  archive-docs:
      if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
      runs-on: ubuntu-latest
      steps:
          - name: Configure workflow
            id: configuration
            run: |
              echo "BRANCH_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
              echo "DOCS_OUTPUT_DIR=${GITHUB_WORKSPACE}/skript-docs/docs/archives/${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
              echo "DOCS_REPO_DIR=${GITHUB_WORKSPACE}/skript-docs" >> $GITHUB_OUTPUT
              echo "SKRIPT_REPO_DIR=${GITHUB_WORKSPACE}/skript" >> $GITHUB_OUTPUT
          - name: Checkout Skript
            uses: actions/checkout@v5
            with:
                submodules: recursive
                path: skript
          - name: Setup documentation environment
            uses: ./skript/.github/workflows/docs/setup-docs
            with:
                docs_deploy_key: ${{ secrets.DOCS_DEPLOY_KEY }}
                docs_output_dir: ${{ steps.configuration.outputs.DOCS_OUTPUT_DIR }}
          - name: Generate documentation
            uses: ./skript/.github/workflows/docs/generate-docs
            with:
                docs_output_dir: ${{ steps.configuration.outputs.DOCS_OUTPUT_DIR }}
                docs_repo_dir: ${{ steps.configuration.outputs.DOCS_REPO_DIR }}
                skript_repo_dir: ${{ steps.configuration.outputs.SKRIPT_REPO_DIR }}
                is_release: true
                generate_javadocs: true
          - name: Push archive documentation
            uses: ./skript/.github/workflows/docs/push-docs
            with:
                docs_repo_dir: ${{ steps.configuration.outputs.DOCS_REPO_DIR }}
                git_name: Archive Docs Bot
                git_email: archivedocs@skriptlang.org
                git_commit_message: "Update ${{ steps.configuration.outputs.BRANCH_NAME }} archive docs"
